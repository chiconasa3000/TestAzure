trigger:
  branches:
    include:
    - main  # or your main branch name
  paths:
    exclude:
    - README.md

pr:
  branches:
    include:
    - main # or your main branch name
  paths:
    exclude:
    - README.md


stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: echo "Building..."
      displayName: 'Build'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'


- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployJob
    displayName: Deploy to Dev
    pool:
      vmImage: 'ubuntu-latest'
    environment: Dev
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureCLI@2
            displayName: 'Deploy'
            inputs:
              azureSubscription: 'your_azure_subscription_name' # Replace with your Azure subscription name
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Deploying..."
                # Add your deployment logic here
                echo "##vso[task.setvariable variable=approvalCount;isOutput=true]0" # Initialize approval count

  - job: WaitForApprovals
    dependsOn: DeployJob
    displayName: 'Wait for PR Approvals'
    pool: server
    timeoutInMinutes: 1440 # 24 hours timeout (adjust as needed)
    variables:
      minimumApprovals: 2
    steps:
      - bash: |
          approvalCount=$(echo "##vso[task.getvariable variable=approvalCount;isSecret=false;]")
          echo "Current approval count: $approvalCount"

          while (( approvalCount < minimumApprovals )); do
            echo "Waiting for approvals..."
            sleep 60  # Check for approvals every minute
            
            approvals=$(curl -s -u "$(System.AccessToken)" -H "Accept: application/json" "https://dev.azure.com/$(System.TeamProject)/_apis/git/repositories/$(Build.Repository.ID)/pullRequests/$(System.PullRequest.PullRequestId)/approvals?api-version=6.0")
            approvalCount=$(echo "$approvals" | jq '.count')
            
            echo "##vso[task.setvariable variable=approvalCount;isOutput=true]$approvalCount"
            echo "New approval count: $approvalCount"
          done

          echo "Minimum approvals received. Proceeding..."
      - task: DownloadPipelineArtifact@2
        inputs:
          source: 'current'
          artifact: 'drop'
          path: '$(Pipeline.Workspace)/drop'


- stage: PostDeploy
  condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
  dependsOn: WaitForApprovals
  jobs:
  - job: PostDeployJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - download: current
        artifact: drop
      - script: echo "Post deployment steps..."
        displayName: 'Post Deploy'


# Define a variable to store the approval count (optional)
variables:
- name: approvalCount
  value: 0